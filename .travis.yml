language: julia
os:
  - linux
julia:
  - 1.0
notifications:
  email: false
git:
  depth: 99999999
cache:
  timeout: 1000
  directories:
    - downloads
env:
  global:
    - BINARYBUILDER_DOWNLOADS_CACHE=downloads
    - BINARYBUILDER_AUTOMATIC_APPLE=true
  # Our build takes too long for one job, so split targets across multiple jobs
  # triplets come from using BinaryBuilder; triplet.(supported_platforms())
  matrix:
    - TARGET=i686-linux-gnu
    - TARGET=x86_64-linux-gnu
    - TARGET=aarch64-linux-gnu
    - TARGET=arm-linux-gnueabihf
    - TARGET=powerpc64le-linux-gnu
    - TARGET=i686-linux-musl
    - TARGET=x86_64-linux-musl
    - TARGET=aarch64-linux-musl
    - TARGET=arm-linux-musleabihf
    - TARGET=x86_64-unknown-freebsd11.1
sudo: required

jobs:
  include:
    - stage: regenerate build.jl
      script: julia --color=yes build_tarballs.jl --only-buildjl
      if: tag IS present

# Before anything else, get the latest versions of things
before_script:
  - julia --color=yes -e 'using Pkg;
      Pkg.add(PackageSpec(name="BinaryProvider", rev="master"));
      Pkg.add(PackageSpec(name="BinaryBuilder", rev="master"))'

script:
  - julia --color=yes build_tarballs.jl $TARGET

deploy:
    provider: releases
    api_key:
        # Note; this api_key is only valid for MaximeBouton/LibSpatialIndexBuilder; you need
        # to make your own: https://docs.travis-ci.com/user/deployment/releases/
	#secure:    
    file_glob: true
    file: products/*
    skip_cleanup: true
    on:
        repo: MaximeBouton/LibSpatialIndexBuilder
        tags: true
